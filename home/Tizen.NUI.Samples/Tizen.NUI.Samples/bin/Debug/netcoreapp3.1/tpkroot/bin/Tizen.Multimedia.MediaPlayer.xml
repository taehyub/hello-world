<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tizen.Multimedia.MediaPlayer</name>
    </assembly>
    <members>
        <member name="T:Tizen.Multimedia.VariantInfo">
            <summary>
            Represents properties for the variant information.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.VariantInfo.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the VariantInfo struct.
            </summary>
            <param name="bandwidth">The bandwidth of the stream can be supportable, it must be set. (deafult: -1)</param>
            <param name="width">The width of the stream, this is optional parameter. (deafult: -1)</param>
            <param name="height">The height of the stream, this is optional parameter. (deafult: -1)</param>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.VariantInfo.Bandwidth">
            <summary>
            Gets or sets the maximum limit of the available bandwidth. (-1 = no limit).
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.VariantInfo.Width">
            <summary>
            Gets or sets the maximum limit of the available width. (-1 = no limit).
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.VariantInfo.Height">
            <summary>
            Gets or sets the maximum limit of the available height. (-1 = no limit).
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.AdaptiveVariants">
            <summary>
            Provides the ability to control the maximum limit of the available streaming variant for <see cref="T:Tizen.Multimedia.Player"/>.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.AdaptiveVariants.Player">
            <summary>
            Gets the <see cref="T:Tizen.Multimedia.Player"/> that owns this instance.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AdaptiveVariants.SetMaxLimit(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the maximum limit of the streaming variant.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="F:Tizen.Multimedia.AdaptiveVariants.Player"/> has already been disposed of.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <pramref name="bandwidth"/> is less than -1.<br/>
                -or-<br/>
                <pramref name="width"/> is less than -1.<br/>
                -or-<br/>
                <pramref name="height"/> is less than -1.<br/>
            </exception>
            <seealso cref="M:Tizen.Multimedia.AdaptiveVariants.GetMaxLimit"/>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AdaptiveVariants.GetMaxLimit">
            <summary>
            Gets the maximum limit of the streaming variant.
            </summary>
            <returns>The <see cref="T:Tizen.Multimedia.VariantInfo"/> containing the variant information.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="F:Tizen.Multimedia.AdaptiveVariants.Player"/> has already been disposed of.</exception>
            <seealso cref="M:Tizen.Multimedia.AdaptiveVariants.SetMaxLimit(System.Int32,System.Int32,System.Int32)"/>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AdaptiveVariants.AvailableAdaptiveVariants">
            <summary>
            Retrieves all the available adaptive variants.
            </summary>
            <returns>
            It returns a list contained all the available adaptive variants.
            </returns>
            The <see cref="F:Tizen.Multimedia.AdaptiveVariants.Player"/> must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>,
            <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>, or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="F:Tizen.Multimedia.AdaptiveVariants.Player"/> has already been disposed of.</exception>
            <seealso cref="T:Tizen.Multimedia.VariantInfo"/>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.AudioDataDecodedEventArgs">
            <summary>
            Provides data for the <see cref="E:Tizen.Multimedia.Player.AudioDataDecoded"/> event.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioDataDecodedEventArgs.#ctor(Tizen.Multimedia.MediaPacket)">
            <summary>
            Initializes a new instance of the AudioFrameDecodedEventArgs class.
            </summary>
        </member>
        <member name="P:Tizen.Multimedia.AudioDataDecodedEventArgs.Packet">
            <summary>
            Gets the packet containing the decoded frame.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.AudioEffect">
            <summary>
            Provides the ability to control the audio effects for <see cref="T:Tizen.Multimedia.Player"/>.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioEffect.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:Tizen.Multimedia.EqualizerBand"/> at the specified index.
            </summary>
            <param name="index">The index of the band to get.</param>
            <exception cref="T:System.ObjectDisposedException">The <see cref="P:Tizen.Multimedia.AudioEffect.Player"/> has already been disposed of.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <pramref name="index"/> is less than zero.<br/>
                -or-<br/>
                <paramref name="index"/> is equal to or greater than <see cref="P:Tizen.Multimedia.AudioEffect.Count"/>.
            </exception>
            <exception cref="T:Tizen.Multimedia.NotAvailableException">
                If audio offload is enabled by calling <see cref="P:Tizen.Multimedia.AudioOffload.IsEnabled"/>. (Since tizen 6.0)
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioEffect.Clear">
            <summary>
            Clears the equalizer effect.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The <see cref="P:Tizen.Multimedia.AudioEffect.Player"/> has already been disposed of.</exception>
            <exception cref="T:Tizen.Multimedia.NotAvailableException">If audio offload is enabled by calling <see cref="P:Tizen.Multimedia.AudioOffload.IsEnabled"/>. (Since tizen 6.0)
                -or-<br/>
                <see cref="P:Tizen.Multimedia.AudioEffect.IsAvailable"/> returns false. (Since tizen 6.0)
            </exception>
            <seealso cref="P:Tizen.Multimedia.AudioEffect.IsAvailable"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioEffect.Count">
            <summary>
            Gets the number of items.
            </summary>
            <exception cref="T:Tizen.Multimedia.NotAvailableException">If audio offload is enabled by calling <see cref="P:Tizen.Multimedia.AudioOffload.IsEnabled"/>. (Since tizen 6.0)
                -or-<br/>
                <see cref="P:Tizen.Multimedia.AudioEffect.IsAvailable"/> returns false. (Since tizen 6.0)
            </exception>
            <seealso cref="P:Tizen.Multimedia.AudioEffect.IsAvailable"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioEffect.BandLevelRange">
            <summary>
            Gets the range of band level in dB.
            </summary>
            <exception cref="T:Tizen.Multimedia.NotAvailableException">If audio offload is enabled by calling <see cref="P:Tizen.Multimedia.AudioOffload.IsEnabled"/>. (Since tizen 6.0)
                -or-<br/>
                <see cref="P:Tizen.Multimedia.AudioEffect.IsAvailable"/> returns false. (Since tizen 6.0)
            </exception>
            <seealso cref="P:Tizen.Multimedia.AudioEffect.IsAvailable"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioEffect.IsAvailable">
            <summary>
            Gets the value whether the AudioEffect is available or not.
            </summary>
            <remarks>This function returns the availability of the <see cref="T:Tizen.Multimedia.AudioEffect"/>.
            It could be unavailable depending on the platform capabilities.<br/>
            If audio offload is enabled by calling <see cref="P:Tizen.Multimedia.AudioOffload.IsEnabled"/>,
            the <see cref="P:Tizen.Multimedia.AudioEffect.IsAvailable"/> returns false.(Since tizen 6.0)</remarks>
            <exception cref="T:Tizen.Multimedia.NotAvailableException">
                Depending on the audio codec type, the function is not available. (Since tizen 6.0)
            </exception>
            <seealso cref="P:Tizen.Multimedia.Player.AudioOffload"/>
            <seealso cref="P:Tizen.Multimedia.Player.AudioCodecType"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioEffect.Player">
            <summary>
            Gets the player that this AudioEffect belongs to.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.AudioOffload">
            <summary>
            The class that control the audio offload for <see cref="T:Tizen.Multimedia.Player"/>.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioOffload.#ctor(Tizen.Multimedia.Player)">
            <summary>
            Provides a means to retrieve audio offload information.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioOffload.IsEnabled">
            <summary>
            Enables or disables the audio offload.
            </summary>
            <value>The value indicating whether or not audio offload is enabled. The default value is false.</value>
            <remarks><para>The player lets the hardware decode and render the sound if the audio offload is enabled.
            Audio offload can reduce the power consumption, but disable the ability to handle output PCM.
            Please check the below list of functions which will not work if offloading is enabled.</para>
            <para>If audio offload is enabled, the following functions will return <see cref="T:Tizen.Multimedia.NotAvailableException"/>: <br/>
            <see cref="T:Tizen.Multimedia.AudioEffect"/><br/>
            <see cref="T:Tizen.Multimedia.EqualizerBand"/><br/>
            <see cref="T:Tizen.Multimedia.PlayerTrackInfo"/><br/>
            <see cref="M:Tizen.Multimedia.Player.EnableExportingAudioData(Tizen.Multimedia.AudioMediaFormat,Tizen.Multimedia.PlayerAudioExtractOption)"/><br/>
            <see cref="P:Tizen.Multimedia.Player.AudioLatencyMode"/><br/>
            <see cref="M:Tizen.Multimedia.Player.SetPlaybackRate(System.Single)"/><br/>
            <see cref="P:Tizen.Multimedia.Player.ReplayGain"/><br/>
            <see cref="P:Tizen.Multimedia.Player.AudioPitch"/><br/>
            <see cref="P:Tizen.Multimedia.Player.AudioPitchEnabled"/><br/></para>
            <para>Although they are called before offload is enabled, they don't work normally.</para>
            <para>To set, the player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Idle"/> state.
            The sound stream type of the player should be <see cref="F:Tizen.Multimedia.AudioStreamType.Media"/>.</para></remarks>
            <feature>http://tizen.org/feature/multimedia.player.audio_offload</feature>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">
                The player is not in the valid state.<br/>
                -or-<br/>
                Operation failed; internal error.
            </exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioOffload.IsActivated">
            <summary>
            Get a state whether or not the audio offload is activated.
            </summary>
            <value>The value indicating whether or not AudioOffload is activated.</value>
            <remarks>
            Audio offload could be inactivated depending on the audio device capability even though the audio offload feature is supported.
            The <see cref="T:Tizen.Multimedia.Player"/> that owns this instance must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>,
            <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>, or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.
            </remarks>
            <feature>http://tizen.org/feature/multimedia.player.audio_offload</feature>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">
                The player is not in the valid state.<br/>
                -or-<br/>
                Operation failed; internal error.
            </exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioOffload.SupportedFormats">
            <summary>
            Retrieves the supported audio formats for audio offload.
            </summary>
            <returns>
            It returns a list containing supported audio formats for audio offload.
            </returns>
            <remarks>The supported media format can vary depending on the device capabilities.</remarks>
            <feature>http://tizen.org/feature/multimedia.player.audio_offload</feature>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Player"/> has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">
                Operation failed; internal error.
            </exception>
            <seealso cref="T:Tizen.Multimedia.MediaFormatAudioMimeType"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.BufferingProgressChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Tizen.Multimedia.Player.BufferingProgressChanged"/> event.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.BufferingProgressChangedEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the BufferingProgressChangedEventArgs class.
            </summary>
            <param name="percent">The value indicating the buffering percentage.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.BufferingProgressChangedEventArgs.Percent">
            <summary>
            Gets the value indicating the buffering percentage.
            </summary>
            <value>The percentage of the buffering.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.BufferingProgressChangedEventArgs.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.CapturedFrame">
            <summary>
            Represents data for a video frame captured.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.CapturedFrame.Buffer">
            <summary>
            Gets the raw buffer of the captured image.
            </summary>
            <remarks>The color space format is RGB888.</remarks>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.CapturedFrame.Size">
            <summary>
            Gets the size.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.DownloadProgress">
            <summary>
            Represents data for a downloading status.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.DownloadProgress.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the DownloadProgress struct.
            </summary>
            <param name="start">The position that downloading started in percentage.</param>
            <param name="current">The position indicating the current downloading progress in percentage.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.DownloadProgress.Start">
            <summary>
            Gets or sets the starting position.
            </summary>
            <value>The position that downloading started in percentage.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.DownloadProgress.Current">
            <summary>
            Gets or sets the current position(The end position of received data).
            </summary>
            <value>The position indicating the current downloading progress in percentage.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.DownloadProgress.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.EqualizerBand">
            <summary>
            Represents an equalizer band of <see cref="T:Tizen.Multimedia.AudioEffect"/>.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.EqualizerBand.Level">
            <summary>
            Sets or gets the gain for the equalizer band.
            </summary>
            <param name="value">The value indicating new gain in decibel(dB).</param>
            <exception cref="T:System.ObjectDisposedException">The player that this EqualizerBand belongs to has already been disposed of.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="value"/> is not inside of <see cref="P:Tizen.Multimedia.AudioEffect.BandLevelRange"/>.
            </exception>
            <exception cref="T:Tizen.Multimedia.NotAvailableException">
                If audio offload is enabled by calling <see cref="P:Tizen.Multimedia.AudioOffload.IsEnabled"/>. (Since tizen 6.0)
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.EqualizerBand.Frequency">
            <summary>
            Gets the frequency in dB.
            </summary>
            <exception cref="T:Tizen.Multimedia.NotAvailableException">
                If audio offload is enabled by calling <see cref="P:Tizen.Multimedia.AudioOffload.IsEnabled"/>. (Since tizen 6.0)
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.EqualizerBand.FrequencyRange">
            <summary>
            Gets the frequency range in dB.
            </summary>
            <exception cref="T:Tizen.Multimedia.NotAvailableException">
                If audio offload is enabled by calling <see cref="P:Tizen.Multimedia.AudioOffload.IsEnabled"/>. (Since tizen 6.0)
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.MediaBufferSource">
            <summary>
            Represents a media source using memory.
            </summary>
            <remarks>
            The buffer has to be filled with appropriate data which means it must be well-formatted.
            If you provide invalid data, you won't receive an error until <see cref="M:Tizen.Multimedia.Player.Start"/> is called.
            </remarks>
            <seealso cref="M:Tizen.Multimedia.Player.SetSource(Tizen.Multimedia.MediaSource)"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaBufferSource.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the MediaBufferSource class with an allocated buffer.
            </summary>
            <param name="length">The value indicating the size of the buffer.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="length"/> is zero.<br/>
                -or-<br/>
                <paramref name="length"/> is less than zero.
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaBufferSource.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the MediaBufferSource class from the buffer.
            </summary>
            <param name="buffer">The source array to be copied into the buffer.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is null.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaBufferSource.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the MediaBufferSource class from the buffer
            with the specified length and the specified offset.
            </summary>
            <param name="buffer">The source array to be copied into the buffer.</param>
            <param name="length">The value indicating the number of bytes to copy from the buffer.</param>
            <param name="offset">The value indicating the offset in the buffer of the first byte to copy.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="offset"/> is less than zero.<br/>
                -or-<br/>
                <paramref name="length"/> is equal to or less than zero.<br/>
                -or-<br/>
                <paramref name="offset"/>+<paramref name="length"/> is greater than buffer.Length.
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaBufferSource.Wrap(System.Byte[])">
            <summary>
            Creates a MediaBufferSource that wraps a byte array.
            </summary>
            <param name="buffer">The array to be wrapped.</param>
            <returns>A MediaBufferSource wrapping the byte array.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaBufferSource.Buffer">
            <summary>
            Gets the byte array of this buffer.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.MediaSource">
            <summary>
            MediaSource is a base class for <see cref="T:Tizen.Multimedia.Player"/> sources.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.MediaStreamBufferStatusChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Tizen.Multimedia.MediaStreamConfiguration.BufferStatusChanged"/> event.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaStreamBufferStatusChangedEventArgs.#ctor(Tizen.Multimedia.MediaStreamBufferStatus)">
            <summary>
            Initializes a new instance of the MediaStreamBufferStatusChangedEventArgs class.
            </summary>
            <param name="status">The value indicating the status of the stream.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaStreamBufferStatusChangedEventArgs.Status">
            <summary>
            Gets the status.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaStreamBufferStatusChangedEventArgs.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.MediaStreamConfiguration">
            <summary>
            Provides a means to configure properties and handle events for <see cref="T:Tizen.Multimedia.MediaStreamSource"/>.
            </summary>
            <seealso cref="T:Tizen.Multimedia.MediaStreamSource"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Multimedia.MediaStreamConfiguration.BufferStatusChanged">
            <summary>
            Occurs when the buffer underruns or overflows.
            </summary>
            <remarks>The event handler will be executed on an internal thread.</remarks>
            <seealso cref="P:Tizen.Multimedia.MediaStreamConfiguration.BufferMaxSize"/>
            <seealso cref="P:Tizen.Multimedia.MediaStreamConfiguration.BufferMinThreshold"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Multimedia.MediaStreamConfiguration.SeekingOccurred">
            <summary>
            Occurs when the seeking is requested.
            </summary>
            <remarks>The event handler will be executed on an internal thread.</remarks>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaStreamConfiguration.BufferMaxSize">
            <summary>
            Gets or sets the max size of the buffer.
            </summary>
            <value>The max size of the buffer. The default is 200000.</value>
            <remarks>If the buffer level overflows the max size, <see cref="E:Tizen.Multimedia.MediaStreamConfiguration.BufferStatusChanged"/> will be raised with <see cref="F:Tizen.Multimedia.MediaStreamBufferStatus.Overflow"/>.</remarks>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:Tizen.Multimedia.MediaStreamSource"/> is not assigned to a player.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="value"/> is zero.</exception>
            <seealso cref="E:Tizen.Multimedia.MediaStreamConfiguration.BufferStatusChanged"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaStreamConfiguration.BufferMinThreshold">
            <summary>
            Gets or sets the minimum threshold of the buffer.
            </summary>
            <value>The minimum threshold of the buffer in percentage. The default is zero.</value>
            <remarks>If the buffer level drops below the threshold value, <see cref="E:Tizen.Multimedia.MediaStreamConfiguration.BufferStatusChanged"/> will be raised with <see cref="F:Tizen.Multimedia.MediaStreamBufferStatus.Underrun"/>.</remarks>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:Tizen.Multimedia.MediaStreamSource"/> is not assigned to a player.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="value"/> is greater than 100.</exception>
            <seealso cref="E:Tizen.Multimedia.MediaStreamConfiguration.BufferStatusChanged"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.MediaStreamSeekingOccurredEventArgs">
            <summary>
            Provides data for the <see cref="E:Tizen.Multimedia.MediaStreamConfiguration.SeekingOccurred"/> event.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaStreamSeekingOccurredEventArgs.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of the MediaStreamSeekingOccurredEventArgs class.
            </summary>
            <param name="offset">The value indicating the new position to seek.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaStreamSeekingOccurredEventArgs.Offset">
            <summary>
            Gets the offset.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaStreamSeekingOccurredEventArgs.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.MediaStreamSource">
            <summary>
            Provides the ability to push packets as the source of <see cref="P:Tizen.Multimedia.MediaStreamSource.Player"/>.
            </summary>
            <remarks>The source must be set as a source to a player before pushing.</remarks>
            <seealso cref="M:Tizen.Multimedia.Player.SetSource(Tizen.Multimedia.MediaSource)"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaStreamSource.SupportedAudioTypes">
            <summary>
            Gets all supported audio types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaStreamSource.SupportedVideoTypes">
            <summary>
            Gets all supported video types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaStreamSource.#ctor(Tizen.Multimedia.AudioMediaFormat,Tizen.Multimedia.VideoMediaFormat)">
            <summary>
            Initializes a new instance of the MediaStreamSource class
            with the specified <see cref="T:Tizen.Multimedia.AudioMediaFormat"/> and <see cref="T:Tizen.Multimedia.VideoMediaFormat"/>.
            </summary>
            <param name="audioMediaFormat">The <see cref="T:Tizen.Multimedia.AudioMediaFormat"/> for this source.</param>
            <param name="videoMediaFormat">The <see cref="T:Tizen.Multimedia.VideoMediaFormat"/> for this source.</param>
            <remarks>AAC and H.264 are supported.</remarks>
            <exception cref="T:System.ArgumentNullException">Both <paramref name="audioMediaFormat"/> and <paramref name="videoMediaFormat"/> are null.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="audioMediaFormat"/> is not supported.<br/>
                -or-<br/>
                <paramref name="videoMediaFormat"/> is not supported.
            </exception>
            <seealso cref="P:Tizen.Multimedia.MediaStreamSource.SupportedAudioTypes"/>
            <seealso cref="P:Tizen.Multimedia.MediaStreamSource.SupportedVideoTypes"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaStreamSource.#ctor(Tizen.Multimedia.AudioMediaFormat)">
            <summary>
            Initializes a new instance of the MediaStreamSource class with the specified <see cref="T:Tizen.Multimedia.AudioMediaFormat"/>.
            </summary>
            <param name="audioMediaFormat">The <see cref="T:Tizen.Multimedia.AudioMediaFormat"/> for this source.</param>
            <remarks>AAC is supported.</remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="audioMediaFormat"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="audioMediaFormat"/> is not supported.</exception>
            <seealso cref="P:Tizen.Multimedia.MediaStreamSource.SupportedAudioTypes"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaStreamSource.#ctor(Tizen.Multimedia.VideoMediaFormat)">
            <summary>
            Initializes a new instance of the MediaStreamSource class with the specified <see cref="T:Tizen.Multimedia.VideoMediaFormat"/>.
            </summary>
            <remarks>H.264 is supported.</remarks>
            <param name="videoMediaFormat">The <see cref="T:Tizen.Multimedia.VideoMediaFormat"/> for this source.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="videoMediaFormat"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="videoMediaFormat"/> is not supported.</exception>
            <seealso cref="P:Tizen.Multimedia.MediaStreamSource.SupportedVideoTypes"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaStreamSource.AudioConfiguration">
            <summary>
            Gets the audio configuration, or null if no AudioMediaFormat is specified in the constructor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaStreamSource.VideoConfiguration">
            <summary>
            Gets the video configuration, or null if no VideoMediaFormat is specified in the constructor.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaStreamSource.Push(Tizen.Multimedia.MediaPacket)">
            <summary>
            Pushes elementary stream to decode audio or video.
            </summary>
            <remarks>This source must be set as a source to a player and the player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>,
            <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>, or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.</remarks>
            <param name="packet">The <see cref="T:Tizen.Multimedia.MediaPacket"/> to decode.</param>
            <exception cref="T:System.InvalidOperationException">
                This source is not set as a source to a player.<br/>
                -or-<br/>
                The player is not in the valid state.
            </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="packet"/> is null.</exception>
            <exception cref="T:System.ObjectDisposedException"><paramref name="packet"/> has been disposed of.</exception>
            <exception cref="T:System.ArgumentException">
                <paramref name="packet"/> is neither video nor audio type.<br/>
                -or-<br/>
                The format of packet is not matched with the specified format in the constructor.
            </exception>
            <exception cref="T:Tizen.Multimedia.NoBufferSpaceException">The internal buffer has reached its limits.</exception>
            <seealso cref="M:Tizen.Multimedia.Player.SetSource(Tizen.Multimedia.MediaSource)"/>
            <seealso cref="P:Tizen.Multimedia.MediaStreamConfiguration.BufferMaxSize"/>
            <seealso cref="T:Tizen.Multimedia.MediaPacket"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaStreamSource.Player">
            <summary>
            Gets the <see cref="P:Tizen.Multimedia.MediaStreamSource.Player"/> that this source is assigned to as a source, or null if this source is not assigned.
            </summary>
            <seealso cref="M:Tizen.Multimedia.Player.SetSource(Tizen.Multimedia.MediaSource)"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.MediaUriSource">
            <summary>
            Represents a media source with a uri.
            </summary>
            <remarks>
            The internet privilege(http://tizen.org/privilege/internet) must be added if any URLs are used to play from a network.
            The mediastorage privilege(http://tizen.org/privilege/mediastorage) must be added if any video/audio files are used to play located in the internal storage.
            The externalstorage privilege(http://tizen.org/privilege/externalstorage) must be added if any video/audio files are used to play located in the external storage.
            </remarks>
            <seealso cref="M:Tizen.Multimedia.Player.SetSource(Tizen.Multimedia.MediaSource)"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.MediaUriSource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MediaUriSource class with the specified uri.</summary>
            <param name="uri">The uri string.</param>
            <remarks>For HTTP or RSTP, uri should start with "http://" or "rtsp://".
            The default protocol is "file://".
            If you provide an invalid uri, you won't receive an error until <see cref="M:Tizen.Multimedia.Player.Start"/> is called.</remarks>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.MediaUriSource.Uri">
            <summary>
            Gets the uri.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.PlaybackInterruptedEventArgs">
            <summary>
            Provides data for the <see cref="E:Tizen.Multimedia.Player.PlaybackInterrupted"/> event.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.PlaybackInterruptedEventArgs.#ctor(Tizen.Multimedia.PlaybackInterruptionReason)">
            <summary>
            Initializes a new instance of the PlaybackInterruptedEventArgs class.
            </summary>
            <param name="reason">The enum value indicating the reason.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.PlaybackInterruptedEventArgs.Reason">
            <summary>
            Gets the reason.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.PlaybackInterruptedEventArgs.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.Player">
            <summary>
            Provides the ability to control media playback.
            </summary>
            <remarks>
            The player provides functions to play a media content.
            It also provides functions to adjust the configurations of the player such as playback rate, volume, looping etc.
            Note that only one video player can be played at one time.
            </remarks>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Player"/> class.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.#ctor(System.IntPtr,System.Action{System.Int32,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Tizen.Multimedia.Player"/> class with a native handle.
            The class takes care of the life cycle of the handle.
            Thus, it should not be closed/destroyed in another location.
            </summary>
            <param name="handle">The handle for the media player.</param>
            <param name="errorHandler">The handle for occuring error.</param>
            <remarks>
            This supports the product infrastructure and is not intended to be used directly from application code.
            </remarks>
        </member>
        <member name="M:Tizen.Multimedia.Player.Initialize">
            <summary>
            This supports the product infrastructure and is not intended to be used directly from application code.
            </summary>
        </member>
        <member name="M:Tizen.Multimedia.Player.Dispose">
            <summary>
            Releases all resources used by the current instance.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:Tizen.Multimedia.Player"/>.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; false to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Tizen.Multimedia.Player.GetDownloadProgress">
            <summary>
            Gets the streaming download progress.
            </summary>
            <returns>The <see cref="T:Tizen.Multimedia.DownloadProgress"/> containing current download progress.</returns>
            <remarks>The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>, <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>,
            or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.</remarks>
            <exception cref="T:System.InvalidOperationException">
                The player is not streaming.<br/>
                -or-<br/>
                The player is not in the valid state.
                </exception>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.SetSubtitle(System.String)">
            <summary>
            Sets the subtitle path for playback.
            </summary>
            <param name="path">The absolute path of the subtitle file, it can be NULL in the <see cref="F:Tizen.Multimedia.PlayerState.Idle"/> state.</param>
            <remarks>Only MicroDVD/SubViewer(*.sub), SAMI(*.smi), and SubRip(*.srt) subtitle formats are supported.
                <para>The mediastorage privilege(http://tizen.org/privilege/mediastorage) must be added if any files are used to play located in the internal storage.
                The externalstorage privilege(http://tizen.org/privilege/externalstorage) must be added if any files are used to play located in the external storage.</para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="path"/> is an empty string.</exception>
            <exception cref="T:System.IO.FileNotFoundException">The specified path does not exist.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/> is null.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.ClearSubtitle">
            <summary>
            Removes the subtitle path.
            </summary>
            <remarks>The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Idle"/> state.</remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.SetSubtitleOffset(System.Int32)">
            <summary>
            Sets the offset for the subtitle.
            </summary>
            <param name="offset">The value indicating a desired offset in milliseconds.</param>
            <remarks>The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Playing"/> or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.</remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">
                The player is not in the valid state.<br/>
                -or-<br/>
                No subtitle is set.
            </exception>
            <seealso cref="M:Tizen.Multimedia.Player.SetSubtitle(System.String)"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.OnPreparing">
            <summary>
            Called when the <see cref="M:Tizen.Multimedia.Player.Prepare"/> is invoked.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.PrepareAsync">
            <summary>
            Prepares the media player for playback, asynchronously.
            </summary>
            <returns>A task that represents the asynchronous prepare operation.</returns>
            <remarks>To prepare the player, the player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Idle"/> state,
                and a source must be set.</remarks>
            <exception cref="T:System.InvalidOperationException">No source is set.</exception>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.</exception>
            <seealso cref="F:Tizen.Multimedia.PlayerState.Preparing"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.PrepareAsync(System.Threading.CancellationToken)">
            <summary>
            Prepares the cancelable media player for playback, asynchronously.
            </summary>
            <param name="cancellationToken">The cancellation token to cancel preparing.</param>
            <seealso cref="T:System.Threading.CancellationToken"/>
            <returns>The task that represents the asynchronous prepare operation.</returns>
            <remarks>To prepare the player, the player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Idle"/> state,
            and a source must be set.
            The state must be <see cref="F:Tizen.Multimedia.PlayerState.Preparing"/> to cancel preparing.
            When preparing is cancelled, a state will be changed to <see cref="F:Tizen.Multimedia.PlayerState.Idle"/> from <see cref="F:Tizen.Multimedia.PlayerState.Preparing"/>.</remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed.</exception>
            <exception cref="T:System.InvalidOperationException">
                Operation failed; internal error.
                -or-<br/>
                The player is not in the valid state.
                </exception>
            <seealso cref="M:Tizen.Multimedia.Player.PrepareAsync"/>
            <seealso cref="M:Tizen.Multimedia.Player.Unprepare"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.Unprepare">
            <summary>
            Unprepares the player.
            </summary>
            <remarks>
                The most recently used source is reset and is no longer associated with the player. Playback is no longer possible.
                If you want to use the player again, you have to set a source and call <see cref="M:Tizen.Multimedia.Player.PrepareAsync"/> or
                <see cref="M:Tizen.Multimedia.Player.PrepareAsync(System.Threading.CancellationToken)"/> again.
                <para>
                The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>, <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>, or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.
                It has no effect if the player is already in the <see cref="F:Tizen.Multimedia.PlayerState.Idle"/> state.
                </para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.OnUnprepared">
            <summary>
            Called after the <see cref="T:Tizen.Multimedia.Player"/> is unprepared.
            </summary>
            <seealso cref="M:Tizen.Multimedia.Player.Unprepare"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.Start">
            <summary>
            Starts or resumes playback.
            </summary>
            <remarks>
            Sound can be mixed with other sounds if you don't control the stream focus using <see cref="M:Tizen.Multimedia.Player.ApplyAudioStreamPolicy(Tizen.Multimedia.AudioStreamPolicy)"/>.<br/>
                 <para>Before Tizen 5.0, The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/> or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.
                 It has no effect if the player is already in the <see cref="F:Tizen.Multimedia.PlayerState.Playing"/> state.</para>
                 <para>Since Tizen 5.0, The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>, <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>,
                 or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.<br/>
                 In case of HTTP streaming playback, the player could be internally paused for buffering.
                 If the application calls this function during the buffering, the playback will be resumed by force
                 and the buffering message posting by <see cref="E:Tizen.Multimedia.Player.BufferingProgressChanged"/> will be stopped.<br/>
                 In other cases, the player will keep playing without returning error.</para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.</exception>
            <seealso cref="M:Tizen.Multimedia.Player.PrepareAsync"/>
            <seealso cref="M:Tizen.Multimedia.Player.PrepareAsync(System.Threading.CancellationToken)"/>
            <seealso cref="M:Tizen.Multimedia.Player.Stop"/>
            <seealso cref="M:Tizen.Multimedia.Player.Pause"/>
            <seealso cref="E:Tizen.Multimedia.Player.PlaybackCompleted"/>
            <seealso cref="M:Tizen.Multimedia.Player.ApplyAudioStreamPolicy(Tizen.Multimedia.AudioStreamPolicy)"/>
            <seealso cref="E:Tizen.Multimedia.Player.BufferingProgressChanged"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.Stop">
            <summary>
            Stops playing the media content.
            </summary>
            <remarks>
            The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Playing"/> or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.
            It has no effect if the player is already in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/> state.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.</exception>
            <seealso cref="M:Tizen.Multimedia.Player.Start"/>
            <seealso cref="M:Tizen.Multimedia.Player.Pause"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.Pause">
            <summary>
            Pauses the player.
            </summary>
            <remarks>
            The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Playing"/> state.
            It has no effect if the player is already in the <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.</exception>
            <seealso cref="M:Tizen.Multimedia.Player.Start"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.HasSource">
            <summary>
            Determines whether MediaSource has set.
            This supports the product infrastructure and is not intended to be used directly from application code.
            </summary>
        </member>
        <member name="M:Tizen.Multimedia.Player.SetSource(Tizen.Multimedia.MediaSource)">
            <summary>
            Sets a media source for the player.
            </summary>
            <param name="source">A <see cref="T:Tizen.Multimedia.MediaSource"/> that specifies the source for playback.</param>
            <remarks>The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Idle"/> state.</remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">
                The player is not in the valid state.<br/>
                -or-<br/>
                It is not able to assign the source to the player.
                </exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown when the permission is denied.</exception>
            <seealso cref="M:Tizen.Multimedia.Player.PrepareAsync"/>
            <seealso cref="M:Tizen.Multimedia.Player.PrepareAsync(System.Threading.CancellationToken)"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.CaptureVideoAsync">
            <summary>
            Captures a video frame, asynchronously.
            </summary>
            <returns>A task that represents the asynchronous capture operation.</returns>
            <feature>http://tizen.org/feature/multimedia.raw_video</feature>
            <remarks>The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Playing"/> or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.</remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.</exception>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.GetPlayPosition">
            <summary>
            Gets the play position in milliseconds.
            </summary>
            <returns>The current position in milliseconds.</returns>
            <remarks>The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>, <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>,
            or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.</remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.</exception>
            <seealso cref="M:Tizen.Multimedia.Player.SetPlayPositionAsync(System.Int32,System.Boolean)"/>
            <seealso cref="M:Tizen.Multimedia.Player.SetPlayPositionNanosecondsAsync(System.Int64,System.Boolean)"/>
            <seealso cref="M:Tizen.Multimedia.Player.GetPlayPositionNanoseconds"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.SetPlayPositionAsync(System.Int32,System.Boolean)">
            <summary>
            Sets the seek position for playback, asynchronously.
            </summary>
            <param name="position">The value indicating a desired position in milliseconds.</param>
            <param name="accurate">The value indicating whether the operation performs with accuracy.</param>
            <returns>A task that represents the asynchronous operation.</returns>
            <remarks>
                <para>The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>, <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>,
                or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.</para>
                <para>If the <paramref name="accurate"/> is true, the play position will be adjusted as the specified <paramref name="position"/> value,
                but this might be considerably slow. If false, the play position will be a nearest keyframe position.</para>
                </remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.<br/>
                -or-<br/>
                In case of non-seekable content, the player will return error and keep playing without changing the play position.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified position is not valid.</exception>
            <seealso cref="M:Tizen.Multimedia.Player.SetPlayPositionNanosecondsAsync(System.Int64,System.Boolean)"/>
            <seealso cref="M:Tizen.Multimedia.Player.GetPlayPosition"/>
            <seealso cref="M:Tizen.Multimedia.Player.GetPlayPositionNanoseconds"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.GetPlayPositionNanoseconds">
            <summary>
            Gets the play position in nanoseconds.
            </summary>
            <returns>The current position in nanoseconds.</returns>
            <remarks>The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>, <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>,
            or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.</remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.</exception>
            <seealso cref="M:Tizen.Multimedia.Player.SetPlayPositionAsync(System.Int32,System.Boolean)"/>
            <seealso cref="M:Tizen.Multimedia.Player.SetPlayPositionNanosecondsAsync(System.Int64,System.Boolean)"/>
            <seealso cref="M:Tizen.Multimedia.Player.GetPlayPosition"/>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.SetPlayPositionNanosecondsAsync(System.Int64,System.Boolean)">
            <summary>
            Sets the seek position in nanoseconds for playback, asynchronously.
            </summary>
            <param name="position">The value indicating a desired position in nanoseconds.</param>
            <param name="accurate">The value indicating whether the operation performs with accuracy.</param>
            <returns>A task that represents the asynchronous operation.</returns>
            <remarks>
                <para>The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>, <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>,
                or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.</para>
                <para>If the <paramref name="accurate"/> is true, the play position will be adjusted as the specified <paramref name="position"/> value,
                but this might be considerably slow. If false, the play position will be a nearest keyframe position.</para>
                </remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.<br/>
                -or-<br/>
                In case of non-seekable content, the player will return error and keep playing without changing the play position.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified position is not valid.</exception>
            <seealso cref="M:Tizen.Multimedia.Player.SetPlayPositionAsync(System.Int32,System.Boolean)"/>
            <seealso cref="M:Tizen.Multimedia.Player.GetPlayPosition"/>
            <seealso cref="M:Tizen.Multimedia.Player.GetPlayPositionNanoseconds"/>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.SetPlaybackRate(System.Single)">
            <summary>
            Sets the playback rate.
            </summary>
            <param name="rate">The value for the playback rate. Valid range is -5.0 to 5.0, inclusive.</param>
            <remarks>
                <para>The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>, <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>,
                or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.</para>
                <para>The sound will be muted, when the playback rate is under 0.0 or over 2.0.</para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">
                The player is not in the valid state.<br/>
                -or-<br/>
                Streaming playback.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="rate"/> is less than -5.0.<br/>
                -or-<br/>
                <paramref name="rate"/> is greater than 5.0.<br/>
                -or-<br/>
                <paramref name="rate"/> is zero.
            </exception>
            <exception cref="T:Tizen.Multimedia.NotAvailableException">
                If audio offload is enabled by calling <see cref="P:Tizen.Multimedia.AudioOffload.IsEnabled"/>. (Since tizen 6.0)
            </exception>
            <seealso cref="P:Tizen.Multimedia.Player.AudioOffload"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.ApplyAudioStreamPolicy(Tizen.Multimedia.AudioStreamPolicy)">
            <summary>
            Applies the audio stream policy.
            </summary>
            <param name="policy">The <see cref="T:Tizen.Multimedia.AudioStreamPolicy"/> to apply.</param>
            <remarks>
            The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Idle"/> state.<br/>
            <br/>
            <see cref="T:Tizen.Multimedia.Player"/> does not support all <see cref="T:Tizen.Multimedia.AudioStreamType"/>.<br/>
            Supported types are <see cref="F:Tizen.Multimedia.AudioStreamType.Media"/>, <see cref="F:Tizen.Multimedia.AudioStreamType.System"/>,
            <see cref="F:Tizen.Multimedia.AudioStreamType.Alarm"/>, <see cref="F:Tizen.Multimedia.AudioStreamType.Notification"/>,
            <see cref="F:Tizen.Multimedia.AudioStreamType.Emergency"/>, <see cref="F:Tizen.Multimedia.AudioStreamType.VoiceInformation"/>,
            <see cref="F:Tizen.Multimedia.AudioStreamType.RingtoneVoip"/> and <see cref="F:Tizen.Multimedia.AudioStreamType.MediaExternalOnly"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
                The player has already been disposed of.<br/>
                -or-<br/>
                <paramref name="policy"/> has already been disposed of.
            </exception>
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="policy"/> is null.</exception>
            <exception cref="T:System.NotSupportedException">
                The required feature is not supported.<br/>
                -or-<br/>
                <see cref="T:Tizen.Multimedia.AudioStreamType"/> of <paramref name="policy"/> is not supported on the current platform.
            </exception>
            <seealso cref="T:Tizen.Multimedia.AudioStreamPolicy"/>
            <feature>http://tizen.org/feature/multimedia.player.stream_info</feature>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.SetVideoRoi(Tizen.Multimedia.ScaleRectangle)">
            <summary>
            Set the relative ROI (Region Of Interest) area as a decimal fraction based on the video source.
            It can be regarded as zooming operation because the specified video area will be rendered to fit to the display.
            </summary>
            <param name="scaleRectangle">The containing the ROI area information.</param>
            <remarks>
            This function requires the ratio of the each coordinate and size to the video resolution size
            to guarantee of showing the same area for the dynamic resolution video content.
            This function have to be called after setting <see cref="P:Tizen.Multimedia.Player.Display"/>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">
                Operation failed; internal error.
                -or-<br/>
                The <see cref="T:Tizen.Multimedia.PlayerDisplayType"/> is not set to <see cref="F:Tizen.Multimedia.PlayerDisplayType.Overlay"/>.
                </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="scaleRectangle.ScaleX.ScaleX"/> is less than 0.0 or greater than 1.0.<br/>
                -or-<br/>
                <paramref name="scaleRectangle.ScaleY.ScaleY"/> is less than 0.0 or greater than 1.0.<br/>
                -or-<br/>
                <paramref name="scaleRectangle.ScaleWidth.ScaleWidth"/> is less than or equal to 0.0 or greater than 1.0.<br/>
                -or-<br/>
                <paramref name="scaleRectangle.ScaleHeight.ScaleHeight"/> is less than or equal to 0.0 or greater than 1.0.
            </exception>
            <seealso cref="T:Tizen.Multimedia.ScaleRectangle"/>
            <seealso cref="P:Tizen.Multimedia.Player.Display"/>
            <seealso cref="M:Tizen.Multimedia.StreamInfo.GetVideoProperties"/>
            <seealso cref="M:Tizen.Multimedia.Player.GetVideoRoi"/>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.GetVideoRoi">
            <summary>
            Get the relative ROI (Region Of Interest) area as a decimal fraction based on the video source.
            </summary>
            <returns>The <see cref="T:Tizen.Multimedia.ScaleRectangle"/> containing the ROI area information.</returns>
            <remarks>The specified ROI area is valid only in <see cref="F:Tizen.Multimedia.PlayerDisplayType.Overlay"/>.</remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">
                Operation failed; internal error.
                </exception>
            <seealso cref="P:Tizen.Multimedia.Player.Display"/>
            <seealso cref="M:Tizen.Multimedia.StreamInfo.GetVideoProperties"/>
            <seealso cref="M:Tizen.Multimedia.Player.SetVideoRoi(Tizen.Multimedia.ScaleRectangle)"/>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.GetMediaPacket(System.IntPtr)">
            <summary>
            This supports the product infrastructure and is not intended to be used directly from application code.
            </summary>
        </member>
        <member name="M:Tizen.Multimedia.Player.SetPreparing">
            <summary>
            This supports the product infrastructure and is not intended to be used directly from application code.
            </summary>
        </member>
        <member name="M:Tizen.Multimedia.Player.ClearPreparing">
            <summary>
            This supports the product infrastructure and is not intended to be used directly from application code.
            </summary>
        </member>
        <member name="M:Tizen.Multimedia.Player.EnableExportingAudioData(Tizen.Multimedia.AudioMediaFormat,Tizen.Multimedia.PlayerAudioExtractOption)">
            <summary>
            Enable to decode an audio data for exporting PCM from a data.
            </summary>
            <param name="format">The media format handle required to audio PCM specification.
            The format has to include <see cref="P:Tizen.Multimedia.AudioMediaFormat.MimeType"/>,
            <see cref="P:Tizen.Multimedia.AudioMediaFormat.Channel"/> and <see cref="P:Tizen.Multimedia.AudioMediaFormat.SampleRate"/>.
            If the format is NULL, the original PCM format or platform default PCM format will be applied.</param>
            <param name="option">The audio extract option.</param>
            <remarks><para>The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Idle"/> state.</para>
            <para>A <see cref="E:Tizen.Multimedia.Player.AudioDataDecoded"/> event is called in a separate thread(not in the main loop).</para>
            <para>The audio PCM data can be retrieved using a <see cref="E:Tizen.Multimedia.Player.AudioDataDecoded"/> event as a media packet
            and it is available until it's destroyed by <see cref="M:Tizen.Multimedia.MediaPacket.Dispose"/>.
            The packet has to be destroyed as quickly as possible after rendering the data
            and all the packets have to be destroyed before <see cref="M:Tizen.Multimedia.Player.Unprepare"/> is called.</para>
            <para>This function could be unavailable depending on the audio codec type.</para></remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.ArgumentException">The value is not valid.</exception>
            <exception cref="T:System.InvalidOperationException">
                Operation failed; internal error.
                -or-<br/>
                The player is not in the valid state.
                </exception>
            <exception cref="T:Tizen.Multimedia.NotAvailableException">If audio offload is enabled by calling <see cref="P:Tizen.Multimedia.AudioOffload.IsEnabled"/>. (Since tizen 6.0)
                -or-<br/>
                The function is not available depending on the audio codec type. (Since tizen 6.0)
            </exception>
            <seealso cref="T:Tizen.Multimedia.PlayerAudioExtractOption"/>
            <seealso cref="M:Tizen.Multimedia.Player.DisableExportingAudioData"/>
            <seealso cref="P:Tizen.Multimedia.Player.AudioOffload"/>
            <seealso cref="P:Tizen.Multimedia.Player.AudioCodecType"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.DisableExportingAudioData">
            <summary>
            Disable to decode an audio data.
            </summary>
            <remarks>The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Idle"/> or <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>
            state.
            This function could be unavailable depending on the audio codec type.</remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.</exception>
            <exception cref="T:Tizen.Multimedia.NotAvailableException">The function is not available depending on the audio codec type. (Since tizen 6.0)</exception>
            <seealso cref="M:Tizen.Multimedia.Player.EnableExportingAudioData(Tizen.Multimedia.AudioMediaFormat,Tizen.Multimedia.PlayerAudioExtractOption)"/>
            <seealso cref="P:Tizen.Multimedia.Player.AudioCodecType"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.EnableExportingVideoFrame">
            <summary>
            Enables to decode a video data for every frame.
            </summary>
            <remarks><para>The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Idle"/> state,
            but <see cref="T:Tizen.Multimedia.Display"/> must not be set.</para>
            <para>A <see cref="E:Tizen.Multimedia.Player.VideoFrameDecoded"/> event is called in a separate thread, not called in the main loop.</para>
            <para>The video frame can be retrieved using a <see cref="E:Tizen.Multimedia.Player.VideoFrameDecoded"/> event with a media packet parameter.
            If you change the media packet in the <see cref="E:Tizen.Multimedia.Player.VideoFrameDecoded"/> event, it will be displayed on the device.
            The callback function holds the same buffer that is drawn on the display device.
            and the <see cref="T:Tizen.Multimedia.MediaPacket"/> is available until it is destroyed by <see cref="M:Tizen.Multimedia.MediaPacket.Dispose"/>.
            It is recommended to destroy the packet as quickly as possible after the decoded data is rendered on the display.
            All the packets have to be destroyed before <see cref="M:Tizen.Multimedia.Player.Unprepare"/> is called.</para></remarks>
            <feature>http://tizen.org/feature/multimedia.raw_video</feature>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">
                Operation failed; internal error.
                -or-<br/>
                The player is not in the valid state.
                </exception>
            <seealso cref="M:Tizen.Multimedia.Player.DisableExportingVideoFrame"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.DisableExportingVideoFrame">
            <summary>
            Disables to decode a video data.
            </summary>
            <remarks>The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Idle"/> or <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>
            state.</remarks>
            <feature>http://tizen.org/feature/multimedia.raw_video</feature>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.</exception>
            <seealso cref="M:Tizen.Multimedia.Player.EnableExportingVideoFrame"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.GetException(System.Int32,System.String)">
            <summary>
            This method supports the product infrastructure and is not intended to be used directly from application code.
            </summary>
            <param name="errorCode">The error code according to the exception.</param>
            <param name="message">The error message to show user.</param>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="E:Tizen.Multimedia.Player.PlaybackCompleted">
            <summary>
            Occurs when the playback of a media is finished.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Multimedia.Player.PlaybackInterrupted">
            <summary>
            Occurs when the playback of a media is interrupted.
            </summary>
            <remarks>
            If the reason is <see cref="F:Tizen.Multimedia.PlaybackInterruptionReason.ResourceConflict"/>,
            the player state will be one of <see cref="F:Tizen.Multimedia.PlayerState.Idle"/>, <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>,
            or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/>.
            </remarks>
            <seealso cref="P:Tizen.Multimedia.Player.State"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Multimedia.Player.ErrorOccurred">
            <summary>
            Occurs when any error occurs.
            </summary>
            <remarks>The event handler will be executed on an internal thread.</remarks>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Multimedia.Player.VideoStreamChanged">
            <summary>
            Occurs when the video stream is changed.
            </summary>
            <remarks>The event handler will be executed on an internal thread.</remarks>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Multimedia.Player.SubtitleUpdated">
            <summary>
            Occurs when the subtitle is updated.
            </summary>
            <remarks>The event handler will be executed on an internal thread.</remarks>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Multimedia.Player.BufferingProgressChanged">
            <summary>
            Occurs when there is a change in the buffering status of streaming.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.Player.OnErrorOccurred(Tizen.Multimedia.PlayerErrorOccurredEventArgs)">
            <summary>
            Raises the <see cref="E:Tizen.Multimedia.Player.ErrorOccurred"/> event.
            </summary>
            <param name="e">
            An <see cref="T:Tizen.Multimedia.PlayerErrorOccurredEventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="E:Tizen.Multimedia.Player.VideoFrameDecoded">
            <summary>
            Occurs when a video frame is decoded.
            </summary>
            <remarks>
                <para>The event handler will be executed on an internal thread.</para>
                <para>The <see cref="P:Tizen.Multimedia.VideoFrameDecodedEventArgs.Packet"/> in event args should be disposed after use.</para>
            </remarks>
            <feature>http://tizen.org/feature/multimedia.raw_video</feature>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <seealso cref="P:Tizen.Multimedia.VideoFrameDecodedEventArgs.Packet"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="E:Tizen.Multimedia.Player.AudioDataDecoded">
            <summary>
            Occurs when a audio frame is decoded.
            </summary>
            <remarks>
                <para>The event handler will be executed on an internal thread.</para>
                <para>The <see cref="P:Tizen.Multimedia.AudioDataDecodedEventArgs.Packet"/> in event args should be disposed after use.</para>
            </remarks>
            <seealso cref="P:Tizen.Multimedia.AudioDataDecodedEventArgs.Packet"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.Handle">
            <summary>
            Gets the native handle of the player.
            </summary>
            <value>An IntPtr that contains the native handle of the player.</value>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.Cookie">
            <summary>
            Gets or sets the cookie for streaming playback.
            </summary>
            <remarks>To set, the player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Idle"/> state.</remarks>
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.</exception>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.ArgumentNullException">The value to set is null.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.UserAgent">
            <summary>
            Gets or sets the user agent for streaming playback.
            </summary>
            <remarks>To set, the player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Idle"/> state.</remarks>
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.</exception>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.ArgumentNullException">The value to set is null.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.BufferingTime">
            <summary>
            Gets or sets the streaming buffering time.
            </summary>
            <remarks>To set, the player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Idle"/> state.</remarks>
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.</exception>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <pramref name="PreBufferMillisecond"/> is less than -1.<br/>
                -or-<br/>
                <pramref name="ReBufferMillisecond"/> is less than -1.<br/>
            </exception>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <seealso cref="T:Tizen.Multimedia.PlayerBufferingTime"/>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.State">
            <summary>
            Gets the state of the player.
            </summary>
            <value>The current state of the player.</value>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.AudioLatencyMode">
            <summary>
            Gets or sets the audio latency mode.
            </summary>
            <value>A <see cref="P:Tizen.Multimedia.Player.AudioLatencyMode"/> that specifies the mode. The default is <see cref="F:Tizen.Multimedia.AudioLatencyMode.Mid"/>.</value>
            <remarks>
            If the mode is <see cref="F:Tizen.Multimedia.AudioLatencyMode.High"/>,
            audio output interval can be increased, so it can keep more audio data to play.
            But, state transition like pause or resume can be more slower than default(<see cref="F:Tizen.Multimedia.AudioLatencyMode.Mid"/>).
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.ArgumentException">The value is not valid.</exception>
            <exception cref="T:Tizen.Multimedia.NotAvailableException">
                If audio offload is enabled by calling <see cref="P:Tizen.Multimedia.AudioOffload.IsEnabled"/>. (Since tizen 6.0)
            </exception>
            <seealso cref="P:Tizen.Multimedia.Player.AudioOffload"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.IsLooping">
            <summary>
            Gets or sets the looping state.
            </summary>
            <value>true if the playback is looping; otherwise, false. The default value is false.</value>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.DisplaySettings">
            <summary>
            Gets the display settings.
            </summary>
            <value>A <see cref="T:Tizen.Multimedia.PlayerDisplaySettings"/> that specifies the display settings.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.Display">
            <summary>
            Gets or sets the display.
            </summary>
            <value>A <see cref="T:Tizen.Multimedia.Display"/> that specifies the display.</value>
            <remarks>
                The player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Idle"/> state.<br/>
                The raw video feature(http://tizen.org/feature/multimedia.raw_video) is required if
                the display is created with <see cref="T:Tizen.Multimedia.MediaView"/>.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.ArgumentException">The value has already been assigned to another player.</exception>
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.</exception>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.AudioTrackInfo">
            <summary>
            Gets the track info for the audio.
            </summary>
            <value>A <see cref="T:Tizen.Multimedia.PlayerTrackInfo"/> for audio.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.SubtitleTrackInfo">
            <summary>
            Gets the track info for the subtitle.
            </summary>
            <value>A <see cref="T:Tizen.Multimedia.PlayerTrackInfo"/> for the subtitle.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.StreamInfo">
            <summary>
            Gets the stream information.
            </summary>
            <value>A <see cref="P:Tizen.Multimedia.Player.StreamInfo"/> for this player.</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.AudioEffect">
            <summary>
            Gets the audio effect.
            </summary>
            <feature>http://tizen.org/feature/multimedia.custom_audio_effect</feature>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.Muted">
            <summary>
            Gets or sets the mute state.
            </summary>
            <value>true if the player is muted; otherwise, false.</value>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.Volume">
            <summary>
            Gets or sets the current volume.
            </summary>
            <remarks>Valid volume range is from 0 to 1.0, inclusive.</remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="value"/> is less than zero.<br/>
                -or-<br/>
                <paramref name="value"/> is greater than 1.0.
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.IsAudioOnly">
            <summary>
            Gets or sets the audio-only state.
            </summary>
            <value>true if the playback is audio-only mode; otherwise, false. The default value is false.</value>
            The <see cref="T:Tizen.Multimedia.Player"/> must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>,
            <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>, or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.</exception>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.ReplayGain">
            <summary>
            Gets or sets the player's replaygain state.
            </summary>
            <value>If the replaygain status is true, replaygain is applied (if contents has a replaygain tag);
            otherwise, the replaygain is not affected by tag and properties.</value>
            <remarks>This function could be unavailable depending on the audio codec type.</remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">
                The player is not in the valid state.
            </exception>
            <exception cref="T:Tizen.Multimedia.NotAvailableException">If audio offload is enabled by calling <see cref="P:Tizen.Multimedia.AudioOffload.IsEnabled"/>. (Since tizen 6.0)
                -or-<br/>
                The function is not available depending on the audio codec type. (Since tizen 6.0)
            </exception>
            <seealso cref="P:Tizen.Multimedia.Player.AudioOffload"/>
            <seealso cref="P:Tizen.Multimedia.Player.AudioCodecType"/>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.AudioPitchEnabled">
            <summary>
            Enables or disables controlling the pitch of audio.
            Gets the status of controlling the pitch of audio.
            </summary>
            <value>The value indicating whether or not AudioPitch is enabled. The default is false.</value>
            <remarks>This function is used for audio content only.
            To set, the player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Idle"/> state.
            This function could be unavailable depending on the audio codec type.</remarks>
            <exception cref="T:System.InvalidOperationException">
                The player is not in the valid state.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:Tizen.Multimedia.NotAvailableException">If audio offload is enabled by calling <see cref="P:Tizen.Multimedia.AudioOffload.IsEnabled"/>. (Since tizen 6.0)
                -or-<br/>
                The function is not available depending on the audio codec type. (Since tizen 6.0)
            </exception>
            <seealso cref="P:Tizen.Multimedia.Player.AudioPitch"/>
            <seealso cref="P:Tizen.Multimedia.Player.AudioOffload"/>
            <seealso cref="P:Tizen.Multimedia.Player.AudioCodecType"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.AudioPitch">
            <summary>
            Gets or sets the pitch of audio.
            </summary>
            <value>The audio stream pitch value. The default is 1.</value>
            <remarks>Enabling pitch control could increase the CPU usage on some devices.
            This function is used for audio content only.
            This function could be unavailable depending on the audio codec type.</remarks>
            <exception cref="T:System.InvalidOperationException">
                A pitch is not enabled.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                value is less than 0.5.
                -or-<br/>
                value is greater than 2.0.
            </exception>
            <exception cref="T:Tizen.Multimedia.NotAvailableException">If audio offload is enabled by calling <see cref="P:Tizen.Multimedia.AudioOffload.IsEnabled"/>. (Since tizen 6.0)
                -or-<br/>
                The function is not available depending on the audio codec type. (Since tizen 6.0)
            </exception>
            <seealso cref="P:Tizen.Multimedia.Player.AudioPitchEnabled"/>
            <seealso cref="P:Tizen.Multimedia.Player.AudioOffload"/>
            <seealso cref="P:Tizen.Multimedia.Player.AudioCodecType"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.AudioCodecType">
            <summary>
            Gets or sets the default codec type of the audio decoder.
            </summary>
            <value>A <see cref="T:Tizen.Multimedia.CodecType"/> specifies the type.
            The default codec type could be different depending on the device capability.</value>
            <remarks>
            <para>To set, the player must be in the <see cref="F:Tizen.Multimedia.PlayerState.Idle"/> state.</para>
            <para>If H/W audio codec type is not supported in some cases, S/W audio codec type could be used instead.</para>
            <para>The availability could be changed depending on the codec capability.
            If an application wants to use the H/W audio codec type as default,
            The following functions should be called after the codec type is set. :<br/>
            <see cref="P:Tizen.Multimedia.AudioEffect.IsAvailable"/><br/>
            <see cref="M:Tizen.Multimedia.Player.EnableExportingAudioData(Tizen.Multimedia.AudioMediaFormat,Tizen.Multimedia.PlayerAudioExtractOption)"/><br/>
            <see cref="M:Tizen.Multimedia.Player.DisableExportingAudioData"/><br/>
            <see cref="P:Tizen.Multimedia.Player.ReplayGain"/><br/>
            <see cref="P:Tizen.Multimedia.Player.AudioPitch"/><br/>
            <see cref="P:Tizen.Multimedia.Player.AudioPitchEnabled"/><br/></para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.ArgumentException">The value is not valid.</exception>
            <exception cref="T:System.InvalidOperationException">
                The player is not in the valid state.
                -or-<br/>
                Operation failed; internal error.
            </exception>
            <exception cref="T:Tizen.Multimedia.CodecNotSupportedException">The selected codec is not supported.</exception>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.SphericalVideo">
            <summary>
            Gets the spherical video settings.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.AdaptiveVariants">
            <summary>
            Gets the adaptive variants settings.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.Player.AudioOffload">
            <summary>
            Gets the setting for audio offload.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.PlayerBufferingTime">
            <summary>
            Represents properties for streaming buffering time.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.PlayerBufferingTime.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the PlayerBufferingTime struct.
            </summary>
            <param name="preBufferMillisecond">A duration of buffering data that must be prerolled to start playback.</param>
            Except 0 and -1, setting at least 1000 milliseconds is recommended to ensure the normal buffering operation.
            0 : use platform default value which could be different depending on the streaming type and network status. (the initial value)
            -1 : use current value. (since 5.5)
            <param name="reBufferMillisecond">A duration of buffering data that must be prerolled to resume playback,
            when player is internally paused for buffering.
            Except 0 and -1, setting at least 1000 milliseconds is recommended to ensure the normal buffering operation.
            0 : use platform default value, which depends on the streaming type and network status. It is set as the initial value of this parameter.
            If the player state is <see cref="F:Tizen.Multimedia.PlayerState.Playing"/> or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/>,
            this function will return correct time value instead of 0. (since 5.5)
            -1 : use current value. (since 5.5)</param>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.PlayerBufferingTime.PreBufferMillisecond">
            <summary>
            Gets or sets the duration of buffering data that must be prerolled to start playback.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.PlayerBufferingTime.ReBufferMillisecond">
            <summary>
            Gets or sets the duration of buffering data that must be prerolled to resume playback
            if player enters pause state for buffering.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.PlayerDisplaySettings">
            <summary>
            Provides a means to configure display settings for video <see cref="P:Tizen.Multimedia.PlayerDisplaySettings.Player"/>.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.PlayerDisplaySettings.#ctor(Tizen.Multimedia.Player)">
            <summary>
            This constructor supports the product infrastructure and is not intended to be used directly from application code.
            </summary>
            <param name="player"> The handle for the media player </param>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.PlayerDisplaySettings.Player">
            <summary>
            Gets the player of this instance.
            </summary>
            <value>The <see cref="P:Tizen.Multimedia.PlayerDisplaySettings.Player"/> of this <see cref="T:Tizen.Multimedia.PlayerDisplaySettings"/> instance.</value>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.PlayerDisplaySettings.Mode">
            <summary>
            Gets or sets the <see cref="T:Tizen.Multimedia.PlayerDisplayMode"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException">
                Operation failed; internal error.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.ArgumentException">The specified value to set is invalid.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.PlayerDisplaySettings.IsVisible">
            <summary>
            Gets or sets the value indicating whether the display is visible.
            </summary>
            <value>true if the display is visible; otherwise false.</value>
            <exception cref="T:System.InvalidOperationException">
                Operation failed; internal error.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.PlayerDisplaySettings.Rotation">
            <summary>
            Gets or sets the rotation of the display.
            </summary>
            <value><see cref="F:Tizen.Multimedia.Rotation.Rotate0"/>, <see cref="F:Tizen.Multimedia.Rotation.Rotate90"/>, <see cref="F:Tizen.Multimedia.Rotation.Rotate180"/>,
                <see cref="F:Tizen.Multimedia.Rotation.Rotate270"/>.</value>
            <exception cref="T:System.InvalidOperationException">
                Operation failed; internal error.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.ArgumentException">The specified value to set is invalid.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.PlayerDisplaySettings.SetRoi(Tizen.Multimedia.Rectangle)">
            <summary>
            Sets the roi(region of interest).
            </summary>
            <param name="roi">The region.</param>
            <remarks>
            the roi can be set before setting <see cref="F:Tizen.Multimedia.PlayerDisplayMode.Roi"/>. (since 4.0)
            </remarks>
            <exception cref="T:System.InvalidOperationException">
                Operation failed; internal error.
            </exception>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The width or the height is less than or equal to zero.</exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.PlayerError">
            <summary>
            Specifies errors.
            </summary>
            <seealso cref="E:Tizen.Multimedia.Player.ErrorOccurred"/>
            <seealso cref="T:Tizen.Multimedia.PlayerErrorOccurredEventArgs"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.PlayerError.NoSuchFile">
            <summary>
            File does not exists.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.PlayerError.InternalError">
            <summary>
            Internal error.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.PlayerError.NoSpaceOnDevice">
            <summary>
            No space.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.PlayerError.BufferSpace">
            <summary>
            Not enough buffer.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.PlayerError.SeekFailed">
            <summary>
            <see cref="M:Tizen.Multimedia.Player.SetPlayPositionAsync(System.Int32,System.Boolean)"/> failed.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.PlayerError.InvalidState">
            <summary>
            Invalid state.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.PlayerError.NotSupportedFile">
            <summary>
            Not supported file.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.PlayerError.InvalidUri">
            <summary>
            Invalid uri.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.PlayerError.ConnectionFailed">
            <summary>
            Connection to service failed.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.PlayerError.DrmNotPermitted">
            <summary>
            Not permitted DRM.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.PlayerError.ServiceDisconnected">
            <summary>
            Service disconnected.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.PlayerError.AudioCodecNotSupported">
            <summary>
            Not supported audio codec.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.PlayerError.VideoCodecNotSupported">
            <summary>
            Not supported video codec.
            </summary>
            <since_tizen> 4 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.PlayerError.SubtitleNotSupported">
            <summary>
            Not supported subtitle file.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.PlayerState">
            <summary>
            Specifies states that a <see cref="T:Tizen.Multimedia.Player"/> can have.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.PlayerState.Idle">
            <summary>
            Initial state, unprepared.
            </summary>
            <seealso cref="M:Tizen.Multimedia.Player.Unprepare"/>
        </member>
        <member name="F:Tizen.Multimedia.PlayerState.Ready">
            <summary>
            Prepared.
            </summary>
            <seealso cref="M:Tizen.Multimedia.Player.PrepareAsync"/>
            <seealso cref="M:Tizen.Multimedia.Player.PrepareAsync(System.Threading.CancellationToken)"/>
        </member>
        <member name="F:Tizen.Multimedia.PlayerState.Playing">
            <summary>
            Playing.
            </summary>
            <seealso cref="M:Tizen.Multimedia.Player.Start"/>
        </member>
        <member name="F:Tizen.Multimedia.PlayerState.Paused">
            <summary>
            Paused while playing media.
            </summary>
            <seealso cref="M:Tizen.Multimedia.Player.Pause"/>
        </member>
        <member name="F:Tizen.Multimedia.PlayerState.Preparing">
            <summary>
            Preparation in progress.
            </summary>
            <remarks>In this state, other methods and properties cannot be set.</remarks>
            <seealso cref="M:Tizen.Multimedia.Player.PrepareAsync"/>
            <seealso cref="M:Tizen.Multimedia.Player.PrepareAsync(System.Threading.CancellationToken)"/>
        </member>
        <member name="T:Tizen.Multimedia.AudioLatencyMode">
            <summary>
            Specifies audio latency modes for <see cref="T:Tizen.Multimedia.Player"/>.
            </summary>
            <seealso cref="P:Tizen.Multimedia.Player.AudioLatencyMode"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.AudioLatencyMode.Low">
            <summary>
            Low audio latency mode.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioLatencyMode.Mid">
            <summary>
             Middle audio latency mode.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.AudioLatencyMode.High">
            <summary>
            High audio latency mode.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.PlayerDisplayMode">
            <summary>
            Specifies display modes for <see cref="T:Tizen.Multimedia.Player"/>.
            </summary>
            <seealso cref="P:Tizen.Multimedia.PlayerDisplaySettings.Mode"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.PlayerDisplayMode.LetterBox">
            <summary>
            Letter box.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.PlayerDisplayMode.OriginalSize">
            <summary>
            Original size.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.PlayerDisplayMode.FullScreen">
            <summary>
            Full-screen.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.PlayerDisplayMode.CroppedFull">
            <summary>
            Cropped full-screen.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.PlayerDisplayMode.OriginalOrFull">
            <summary>
            Original size (if surface size is larger than video size(width/height)) or
            letter box (if video size(width/height) is larger than surface size).
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.PlayerDisplayMode.Roi">
            <summary>
            Region of interest.
            </summary>
            <seealso cref="M:Tizen.Multimedia.PlayerDisplaySettings.SetRoi(Tizen.Multimedia.Rectangle)"/>
        </member>
        <member name="F:Tizen.Multimedia.StreamType.Audio">
            <summary>
             Audio element stream type.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.StreamType.Video">
            <summary>
            Video element stream type.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.StreamType.Text">
            <summary>
            Text type.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.MediaStreamBufferStatus">
            <summary>
            Specifies the streaming buffer status.
            </summary>
            <seealso cref="E:Tizen.Multimedia.MediaStreamConfiguration.BufferStatusChanged"/>
            <seealso cref="T:Tizen.Multimedia.MediaStreamBufferStatusChangedEventArgs"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.MediaStreamBufferStatus.Underrun">
            <summary>
            Underrun.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.MediaStreamBufferStatus.Overflow">
            <summary>
             Completed.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.PlaybackInterruptionReason">
            <summary>
            Specifies the reason for the playback interruption.
            </summary>
            <seealso cref="E:Tizen.Multimedia.Player.PlaybackInterrupted"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.PlaybackInterruptionReason.ResourceConflict">
            <summary>
            Interrupted by a resource conflict and the <see cref="T:Tizen.Multimedia.Player"/> will be unprepared automatically.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.StreamMetadataKey">
            <summary>
            Specifies keys for the metadata.
            </summary>
            <seealso cref="M:Tizen.Multimedia.StreamInfo.GetMetadata(Tizen.Multimedia.StreamMetadataKey)"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.StreamMetadataKey.Album">
            <summary>
            Album.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.StreamMetadataKey.Artist">
            <summary>
            Artists.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.StreamMetadataKey.Author">
            <summary>
            Author.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.StreamMetadataKey.Genre">
            <summary>
            Genre.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.StreamMetadataKey.Title">
            <summary>
            Title.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.StreamMetadataKey.Year">
            <summary>
            Year.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.PlayerAudioExtractOption">
            <summary>
            Enumeration of audio extract option.
            </summary>
            <seealso cref="M:Tizen.Multimedia.Player.EnableExportingAudioData(Tizen.Multimedia.AudioMediaFormat,Tizen.Multimedia.PlayerAudioExtractOption)"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.PlayerAudioExtractOption.Default">
            <summary>
            Sync multi-channel audio stream with the playback clock.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.PlayerAudioExtractOption.NoSyncWithClock">
            <summary>
            No sync with the playback clock.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.PlayerAudioExtractOption.Deinterleave">
            <summary>
            Splits one interleaved multi-channel audio stream into several mono audio streams.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.PlayerAudioExtractOption.NoSyncAndDeinterleave">
            <summary>
            Doesn't sync with clock and doesn't split multi-channel audio stream into several mono audio streams.
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.CodecType">
            <summary>
            Specifies the types of a codec for <see cref="T:Tizen.Multimedia.Player"/>.
            </summary>
            <seealso cref="P:Tizen.Multimedia.Player.AudioCodecType"/>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="F:Tizen.Multimedia.CodecType.Hardware">
            <summary>
            An optional flag for using the H/W codec.
            </summary>
        </member>
        <member name="F:Tizen.Multimedia.CodecType.Software">
            <summary>
             An optional flag for using the S/W codec
            </summary>
        </member>
        <member name="T:Tizen.Multimedia.NoBufferSpaceException">
            <summary>
            The exception that is thrown when there is no available space in a buffer.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.NoBufferSpaceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NoBufferSpaceException class with a specified error message.
            </summary>
            <param name="message">Error description.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.ResourceLimitException">
            <summary>
            The exception that is thrown when there is no available resource for internal use.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.ResourceLimitException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ResourceLimitException class with a specified error message.
            </summary>
            <param name="message">Error description.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.NotAvailableException">
            <summary>
            The exception that is thrown when it is not available.
            </summary>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.NotAvailableException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NotAvailableException class with a specified error message.
            </summary>
            <param name="message">Error description.</param>
            <since_tizen> 6 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.PlayerErrorOccurredEventArgs">
            <summary>
            Provides data for the <see cref="E:Tizen.Multimedia.Player.ErrorOccurred"/> event.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.PlayerErrorOccurredEventArgs.#ctor(Tizen.Multimedia.PlayerError)">
            <summary>
            Initializes a new instance of the PlayerErrorOccurredEventArgs class.
            </summary>
            <param name="error">The value indicating the kind of error occurred.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.PlayerErrorOccurredEventArgs.Error">
            <summary>
            Gets the error.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.PlayerErrorOccurredEventArgs.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.PlayerTrackInfo">
            <summary>
            Provides a means to retrieve the track information.
            </summary>
            <seealso cref="P:Tizen.Multimedia.Player.SubtitleTrackInfo"/>
            <seealso cref="P:Tizen.Multimedia.Player.AudioTrackInfo"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.PlayerTrackInfo.GetCount">
            <summary>
            Gets the number of tracks.
            </summary>
            <returns>The number of tracks.</returns>
            <remarks>
            The <see cref="T:Tizen.Multimedia.Player"/> that owns this instance must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>,
            <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>, or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to has been disposed of.</exception>
            <exception cref="T:Tizen.Multimedia.NotAvailableException">The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to is not in the valid state.
                -or-<br/>
                If audio offload is enabled by calling <see cref="P:Tizen.Multimedia.AudioOffload.IsEnabled"/>. (Since tizen 6.0)
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.PlayerTrackInfo.GetLanguageCode(System.Int32)">
            <summary>
            Gets the language code for the specified index, or null if the language is undefined.
            </summary>
            <param name="index">The index of track.</param>
            <returns>The number of tracks.</returns>
            <remarks>
                <para>The <see cref="T:Tizen.Multimedia.Player"/> that owns this instance must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>,
                <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>, or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.</para>
                <para>The language codes are defined in ISO 639-1.</para>
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to has been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to is not in the valid state.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index"/> is less than zero.<br/>
                -or-<br/>
                <paramref name="index"/> is equal to or greater than <see cref="M:Tizen.Multimedia.PlayerTrackInfo.GetCount"/>.
            </exception>
            <exception cref="T:Tizen.Multimedia.NotAvailableException">
                If audio offload is enabled by calling <see cref="P:Tizen.Multimedia.AudioOffload.IsEnabled"/>. (Since tizen 6.0)
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.PlayerTrackInfo.Selected">
            <summary>
            Gets or sets the selected track index.
            </summary>
            <value>The currently selected track index.</value>
            <remarks>
            The <see cref="T:Tizen.Multimedia.Player"/> that owns this instance must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>,
            <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>, or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to has been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">
                The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to is not in the valid state.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="value"/> is less than zero.<br/>
                -or-<br/>
                <paramref name="value"/> is equal to or greater than <see cref="M:Tizen.Multimedia.PlayerTrackInfo.GetCount"/>.
            </exception>
            <exception cref="T:Tizen.Multimedia.NotAvailableException">
                If audio offload is enabled by calling <see cref="P:Tizen.Multimedia.AudioOffload.IsEnabled"/>. (Since tizen 6.0)
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.ScaleRectangle">
            <summary>
            Represents properties for the relative ROI area based on video size
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.ScaleRectangle.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the struct with the specified field of view for the spherical video.
            </summary>
            <param name="scaleX">The ratio expressed as a decimal of x coordinate to the video width. (x/video width)
            x coordinate means the base point located lower-left corner of the video area.
            valid range is [0, 1]. Default value is 0.</param>
            <param name="scaleY">The ratio expressed as a decimal of y coordinate to the video height. (y/video height)
            y coordinate means the base point located lower-left corner of the video area.
            valid range is [0, 1]. Default value is 0.</param>
            <param name="scaleWidth">The ratio expressed as a decimal of ROI width to the video width. (ROI width/video width)
            valid range is (0, 1]. Default value is 1.</param>
            <param name="scaleHeight">The ratio expressed as a decimal of ROI height to the video height. (ROI height/video height)
            valid range is (0, 1]. Default value is 1.</param>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.ScaleRectangle.ScaleX">
            <summary>
            Gets or sets the ScaleX.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.ScaleRectangle.ScaleY">
            <summary>
            Gets or sets the ScaleY.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.ScaleRectangle.ScaleWidth">
            <summary>
            Gets or sets the ScaleWidth.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.ScaleRectangle.ScaleHeight">
            <summary>
            Gets or sets the ScaleHeight.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.DirectionOfView">
            <summary>
            Represents properties for the spherical video direction of view.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.DirectionOfView.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the struct with the specified direction of view for the spherical video.
            </summary>
            <param name="yaw">Pointer to store current value of direction of view angle around vertical axis.
            valid range is [-3.141593, 3.141593]. value will be rounded off to 6 decimal places.
            Default value is 0. </param>
            <param name="pitch">Pointer to store current value of direction of view angle around lateral axis.
            valid range is [-1.570796, 1.570796]. value will be rounded off to 6 decimal places.
            Default value is 0. </param>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.DirectionOfView.Yaw">
            <summary>
            Gets or sets the Yaw.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.DirectionOfView.Pitch">
            <summary>
            Gets or sets the Pitch.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.DirectionOfView.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.FieldOfView">
            <summary>
            Represents properties for the spherical video field of view.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.FieldOfView.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the struct with the specified field of view for the spherical video.
            </summary>
            <param name="horizontalDegrees">The horizontal field of view to display in degrees.</param>
            <remarks>
            Valid range is 1-360 degrees. Default value is 120 degrees.
            </remarks>
            <param name="verticalDegrees">The vertical  field of view to display in degrees.</param>
            <remarks>
            Valid range is 1-180 degrees. Default value is 67 degrees.
            </remarks>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.FieldOfView.HorizontalDegrees">
            <summary>
            Gets or sets the HorizontalDegrees.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.FieldOfView.VerticalDegrees">
            <summary>
            Gets or sets the VerticalDegrees.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.FieldOfView.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.SphericalVideo">
            <summary>
            Provides the ability to control the spherical video for <see cref="T:Tizen.Multimedia.Player"/>.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.SphericalVideo.Player">
            <summary>
            Gets the <see cref="T:Tizen.Multimedia.Player"/> that owns this instance.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.SphericalVideo.#ctor(Tizen.Multimedia.Player)">
            <summary>
            Provides a means to retrieve spherical video information.
            </summary>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.SphericalVideo.IsSphericalContent">
            <summary>
            Gets information whether the current content of the player is spherical.
            </summary>
            <returns>True if the current content is spherical; otherwise false.</returns>
            <remarks>
            The <see cref="P:Tizen.Multimedia.SphericalVideo.Player"/> that owns this instance must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>,
            <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>, or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.
            </remarks>
            <feature>http://tizen.org/feature/opengles.version.2_0</feature>
            <feature>http://tizen.org/feature/multimedia.player.spherical_video</feature>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="P:Tizen.Multimedia.SphericalVideo.Player"/> that this instance belongs to has been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">The <see cref="P:Tizen.Multimedia.SphericalVideo.Player"/> that this instance belongs to is not in the valid state.</exception>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.SphericalVideo.GetZoom">
            <summary>
            Gets the level of the zoom of spherical video.
            </summary>
            <returns>The current zoom level of spherical video.</returns>
            <feature>http://tizen.org/feature/opengles.version.2_0</feature>
            <feature>http://tizen.org/feature/multimedia.player.spherical_video</feature>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <seealso cref="M:Tizen.Multimedia.SphericalVideo.SetZoom(System.Single)"/>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.SphericalVideo.SetZoom(System.Single)">
            <summary>
            Sets the level of the zoom of spherical video.
            </summary>
            <param name="level">The zoom level.</param>
            <feature>http://tizen.org/feature/opengles.version.2_0</feature>
            <feature>http://tizen.org/feature/multimedia.player.spherical_video</feature>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <pramref name="level"/> is less than 1.0.
                -or-<br/>
                <paramref name="level"/> is greater than 10.0.<br/>
            </exception>
            <seealso cref="M:Tizen.Multimedia.SphericalVideo.GetZoom"/>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.SphericalVideo.IsEnabled">
            <summary>
            Gets or sets the spherical mode.
            </summary>
            <feature>http://tizen.org/feature/opengles.version.2_0</feature>
            <feature>http://tizen.org/feature/multimedia.player.spherical_video</feature>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">The player has already been disposed of.</exception>
            <exception cref="T:System.InvalidOperationException">The player is not in the valid state.</exception>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.SphericalVideo.GetDirectionOfView">
            <summary>
            Gets the direction of view for spherical video.
            </summary>
            <returns>The <see cref="T:Tizen.Multimedia.DirectionOfView"/> containing the angle information.</returns>
            <feature>http://tizen.org/feature/opengles.version.2_0</feature>
            <feature>http://tizen.org/feature/multimedia.player.spherical_video</feature>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to has been disposed of.
            </exception>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.SphericalVideo.SetDirectionOfView(Tizen.Multimedia.DirectionOfView)">
            <summary>
            Sets the direction of view for spherical video.
            </summary>
            <param name="directionOfView">The angle values around the vertical and lateral axis.</param>
            <feature>http://tizen.org/feature/opengles.version.2_0</feature>
            <feature>http://tizen.org/feature/multimedia.player.spherical_video</feature>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to has been disposed of.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <pramref name="directionOfView.Yaw"/> should be in range of [-3.141593, 3.141593].<br/>
                -or-<br/>
                <pramref name="directionOfView.Pitch"/> should be in range of [-1.570796, 1.570796].<br/>
            </exception>
            <seealso cref="T:Tizen.Multimedia.DirectionOfView"/>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.SphericalVideo.GetFieldOfView">
            <summary>
            Gets the field of view for spherical video.
            </summary>
            <returns>The <see cref="T:Tizen.Multimedia.FieldOfView"/> containing the degree information to display.</returns>
            <feature>http://tizen.org/feature/opengles.version.2_0</feature>
            <feature>http://tizen.org/feature/multimedia.player.spherical_video</feature>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to has been disposed of.
            </exception>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.SphericalVideo.SetFieldOfView(Tizen.Multimedia.FieldOfView)">
            <summary>
            Sets the field of view for spherical video.
            </summary>
            <param name="fieldOfView">The degree values to display.</param>
            <feature>http://tizen.org/feature/opengles.version.2_0</feature>
            <feature>http://tizen.org/feature/multimedia.player.spherical_video</feature>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to has been disposed of.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <pramref name="fieldOfView.HorizontalDegrees"/> is less than 1.<br/>
                -or-<br/>
                <pramref name="fieldOfView.HorizontalDegrees"/> is greater than 360.<br/>
                -or-<br/>
                <pramref name="fieldOfView.VerticalDegrees"/> is less than 1.<br/>
                -or-<br/>
                <pramref name="fieldOfView.VerticalDegrees"/> is greater than 180.<br/>
            </exception>
            <seealso cref="T:Tizen.Multimedia.FieldOfView"/>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.SphericalVideo.SetZoomWithFieldOfView(System.Single,Tizen.Multimedia.FieldOfView)">
            <summary>
            Sets the zoom with the field of view for spherical video.
            </summary>
            <param name="level">The zoom level.</param>
            <param name="fieldOfView">The degree values to display.</param>
            <feature>http://tizen.org/feature/opengles.version.2_0</feature>
            <feature>http://tizen.org/feature/multimedia.player.spherical_video</feature>
            <exception cref="T:System.NotSupportedException">The required feature is not supported.</exception>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to has been disposed of.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <pramref name="level"/> is less than 1.0.
                -or-<br/>
                <paramref name="level"/> is greater than 10.0.<br/>
                -or-<br/>
                <pramref name="fieldOfView.HorizontalDegrees"/> is less than 1.<br/>
                -or-<br/>
                <pramref name="fieldOfView.HorizontalDegrees"/> is greater than 360.<br/>
                -or-<br/>
                <pramref name="fieldOfView.VerticalDegrees"/> is less than 1.<br/>
                -or-<br/>
                <pramref name="fieldOfView.VerticalDegrees"/> is greater than 180.<br/>
            </exception>
            <seealso cref="T:Tizen.Multimedia.FieldOfView"/>
            <seealso cref="M:Tizen.Multimedia.SphericalVideo.GetZoom"/>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.AudioStreamProperties">
            <summary>
            Represents properties for the audio stream.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioStreamProperties.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the AudioStreamProperties struct with the specified sample rate, channels, and bit rate.
            </summary>
            <param name="sampleRate">The sample rate of the stream.</param>
            <param name="channels">The number of channels of the stream.</param>
            <param name="bitRate">The bit rate of the stream.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioStreamProperties.SampleRate">
            <summary>
            Gets or sets the sample rate.
            </summary>
            <value>The audio sample rate(Hz).</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioStreamProperties.Channels">
            <summary>
            Gets or sets the channels.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.AudioStreamProperties.BitRate">
            <summary>
            Gets or sets the bit rate.
            </summary>
            <value>The audio bit rate(Hz).</value>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.AudioStreamProperties.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.VideoStreamProperties">
            <summary>
            Represents properties for the video stream.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.VideoStreamProperties.#ctor(System.Int32,System.Int32,Tizen.Multimedia.Size)">
            <summary>
            Initializes a new instance of the VideoStreamProperties struct with the specified fps, bit rate, and size.
            </summary>
            <param name="fps">The fps of the stream.</param>
            <param name="bitRate">The bit rate of the stream.</param>
            <param name="size">The size of the stream.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.VideoStreamProperties.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the VideoStreamProperties struct with the specified fps, bit rate, width, and height.
            </summary>
            <param name="fps">The fps of the stream.</param>
            <param name="bitRate">The bit rate of the stream.</param>
            <param name="width">The width of the stream.</param>
            <param name="height">The height of the stream.</param>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.VideoStreamProperties.Fps">
            <summary>
            Gets or sets the fps.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.VideoStreamProperties.BitRate">
            <summary>
            Gets or sets the bit rate.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.VideoStreamProperties.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.VideoStreamProperties.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.StreamInfo">
            <summary>
            Provides a means to retrieve stream information.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.StreamInfo.GetAlbumArt">
            <summary>
            Retrieves the album art of the stream, or null if there is no album art data.
            </summary>
            <returns>Raw byte array if album art exists; otherwise null.</returns>
            <remarks>
            The <see cref="T:Tizen.Multimedia.Player"/> that owns this instance must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>,
            <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>, or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to has been disposed of.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to is not in the valid state.
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.StreamInfo.GetAudioCodec">
            <summary>
            Retrieves the codec name of the audio or null if there is no audio.
            </summary>
            <returns>A string that represents the codec name.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.StreamInfo.GetVideoCodec">
            <summary>
            Retrieves the codec name of the video or null if there is no video.
            </summary>
            <returns>A string that represents the codec name.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.StreamInfo.GetDuration">
            <summary>
            Gets the duration.
            </summary>
            <returns>The duration of the stream.</returns>
            <remarks>
            The <see cref="T:Tizen.Multimedia.Player"/> that owns this instance must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>,
            <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>, or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to has been disposed of.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to is not in the valid state.
            </exception>\
            <seealso cref="M:Tizen.Multimedia.StreamInfo.GetDurationNanoseconds"/>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.StreamInfo.GetDurationNanoseconds">
            <summary>
            Gets the duration in nanoseconds.
            </summary>
            <returns>The duration of the stream.</returns>
            <remarks>
            The <see cref="T:Tizen.Multimedia.Player"/> that owns this instance must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>,
            <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>, or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to has been disposed of.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to is not in the valid state.
            </exception>
            <seealso cref="M:Tizen.Multimedia.StreamInfo.GetDuration"/>
            <since_tizen> 5 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.StreamInfo.GetAudioProperties">
            <summary>
            Gets the properties of the audio.
            </summary>
            <returns>A <see cref="T:Tizen.Multimedia.AudioStreamProperties"/> that contains the audio stream information.</returns>
            <remarks>
            The <see cref="T:Tizen.Multimedia.Player"/> that owns this instance must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>,
            <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>, or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to has been disposed of.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to is not in the valid state.
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.StreamInfo.GetVideoProperties">
            <summary>
            Gets the properties of the video.
            </summary>
            <returns>A <see cref="T:Tizen.Multimedia.VideoStreamProperties"/> that contains the video stream information.</returns>
            <remarks>
            The <see cref="T:Tizen.Multimedia.Player"/> that owns this instance must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>,
            <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>, or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.
            </remarks>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to has been disposed of.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to is not in the valid state.
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.StreamInfo.GetMetadata(Tizen.Multimedia.StreamMetadataKey)">
            <summary>
            Gets the metadata with the specified key.
            </summary>
            <returns>A string that represents the value of the specified key.</returns>
            <param name="key">The key to query.</param>
            <remarks>
            The <see cref="T:Tizen.Multimedia.Player"/> that owns this instance must be in the <see cref="F:Tizen.Multimedia.PlayerState.Ready"/>,
            <see cref="F:Tizen.Multimedia.PlayerState.Playing"/>, or <see cref="F:Tizen.Multimedia.PlayerState.Paused"/> state.</remarks>
            <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to has been disposed of.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="T:Tizen.Multimedia.Player"/> that this instance belongs to is not in the valid state.
            </exception>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.StreamInfo.Player">
            <summary>
            Gets the <see cref="T:Tizen.Multimedia.Player"/> that owns this instance.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.SubtitleUpdatedEventArgs">
            <summary>
            Provides data for the <see cref="E:Tizen.Multimedia.Player.SubtitleUpdated"/> event.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.SubtitleUpdatedEventArgs.Duration">
            <summary>
            Gets the duration of the updated subtitle.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.SubtitleUpdatedEventArgs.Text">
            <summary>
            Gets the text of the updated subtitle.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.SubtitleUpdatedEventArgs.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.VideoFrameDecodedEventArgs">
            <summary>
            Provides data for the <see cref="E:Tizen.Multimedia.Player.VideoFrameDecoded"/> event.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.VideoFrameDecodedEventArgs.#ctor(Tizen.Multimedia.MediaPacket)">
            <summary>
            Initializes a new instance of the VideoFrameDecodedEventArgs class.
            </summary>
        </member>
        <member name="P:Tizen.Multimedia.VideoFrameDecodedEventArgs.Packet">
            <summary>
            Gets the packet containing the decoded frame.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="T:Tizen.Multimedia.VideoStreamChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Tizen.Multimedia.Player.VideoStreamChanged"/> event.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.VideoStreamChangedEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the VideoStreamChangedEventArgs class.
            </summary>
        </member>
        <member name="P:Tizen.Multimedia.VideoStreamChangedEventArgs.Size">
            <summary>
            Gets the <see cref="P:Tizen.Multimedia.VideoStreamChangedEventArgs.Size"/> of the new video.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.VideoStreamChangedEventArgs.Fps">
            <summary>
            Gets the fps of the new video.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="P:Tizen.Multimedia.VideoStreamChangedEventArgs.BitRate">
            <summary>
            Gets the bit rate of the new video.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.Multimedia.VideoStreamChangedEventArgs.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
            <since_tizen> 3 </since_tizen>
        </member>
    </members>
</doc>
