<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tizen.System.Feedback</name>
    </assembly>
    <members>
        <member name="T:Tizen.System.Feedback">
            <summary>
            The Feedback API provides functions to control haptic and sound.
            The Feedback API provides the way to play and stop feedback, and get the information whether a specific pattern is supported.
            Below is the supported pattern string:
            Tap
            SoftInputPanel
            Key0
            Key1
            Key2
            Key3
            Key4
            Key5
            Key6
            Key7
            Key8
            Key9
            KeyStar
            KeySharp
            KeyBack
            Hold
            HardwareKeyPressed
            HardwareKeyHold
            Message
            Email
            WakeUp
            Schedule
            Timer
            General
            PowerOn
            PowerOff
            ChargerConnected
            ChargingError
            FullyCharged
            LowBattery
            Lock
            UnLock
            VibrationModeAbled
            SilentModeDisabled
            BluetoothDeviceConnected
            BluetoothDeviceDisconnected
            ListReorder
            ListSlider
            VolumeKeyPressed
            </summary>
            <privilege>
            For controlling the haptic device:
            http://tizen.org/privilege/haptic
            For controlling the sound, privilege is not needed.
            </privilege>
            <example>
            <code>
            Feedback feedback = new Feedback();
            bool res = feedback.IsSupportedPattern(FeedbackType.Vibration, "Tap");
            </code>
            </example>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="M:Tizen.System.Feedback.#ctor">
            <summary>
            Constructor of Feedback class
            </summary>
            <since_tizen> 3 </since_tizen>
            <feature>
            http://tizen.org/feature/feedback.vibration for FeedbackType.Vibration
            </feature>
            <exception cref="T:System.NotSupportedException">Thrown when failed because the devices (vibration and sound) are not supported.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when failed because of a system error.</exception>
            <privilege>http://tizen.org/privilege/haptic</privilege>
            <example>
            <code>
            Feedback feedback = new Feedback();
            </code>
            </example>
        </member>
        <member name="M:Tizen.System.Feedback.Finalize">
            <summary>
            Finalizes an instance of the Feedback class.
            </summary>
        </member>
        <member name="M:Tizen.System.Feedback.IsSupportedPattern(Tizen.System.FeedbackType,System.String)">
            <summary>
            Gets the supported information about a specific type and pattern.
            </summary>
            <remarks>
            Now, IsSupportedPattern is not working for FeedbackType.All.
            This API is working for FeedbackType.Sound and FeedbackType.Vibration only.
            If you use FeedbackType.All for type parameter, this API will throw ArgumentException.
            To get the supported information for Vibration type, the application should have http://tizen.org/privilege/haptic privilege.
            </remarks>
            <since_tizen> 3 </since_tizen>
            <param name="type">The feedback type.</param>
            <param name="pattern">The feedback pattern string.</param>
            <feature>
            http://tizen.org/feature/feedback.vibration for FeedbackType.Vibration
            </feature>
            <returns>Information whether a pattern is supported.</returns>
            <exception cref="T:System.Exception">Thrown when failed because the feedback is not initialized.</exception>
            <exception cref="T:System.ArgumentException">Thrown when failed because of an invalid arguament.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when failed becuase the device (haptic, sound) is not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown when failed because the access is not granted (No privilege).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when failed because of a system error.</exception>
            <privilege>http://tizen.org/privilege/haptic</privilege>
            <example>
            <code>
            Feedback feedback = new Feedback();
            bool res = feedback.IsSupportedPattern(FeedbackType.Vibration, "Tap");
            </code>
            </example>
        </member>
        <member name="M:Tizen.System.Feedback.Play(Tizen.System.FeedbackType,System.String)">
            <summary>
            Plays a specific feedback pattern.
            </summary>
            <remarks>
            To play Vibration type, app should have http://tizen.org/privilege/haptic privilege.
            </remarks>
            <since_tizen> 3 </since_tizen>
            <param name="type">The feedback type.</param>
            <param name="pattern">The feedback pattern string.</param>
            <feature>
            http://tizen.org/feature/feedback.vibration for FeedbackType.Vibration
            </feature>
            <exception cref="T:System.Exception">Thrown when failed because feedback is not initialized.</exception>
            <exception cref="T:System.ArgumentException">Thrown when failed because of an invalid arguament.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when failed because the device (haptic, sound) or a specific pattern is not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown when failed because the access is not granted(No privilege)</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when failed because of a system error.</exception>
            <privilege>http://tizen.org/privilege/haptic</privilege>
            <example>
            <code>
            Feedback feedback = new Feedback();
            feedback.Play(FeedbackType.All, "Tap");
            </code>
            </example>
        </member>
        <member name="M:Tizen.System.Feedback.Stop">
            <summary>
            Stops to play the feedback.
            </summary>
            <remarks>
            To stop vibration, the application should have http://tizen.org/privilege/haptic privilege.
            </remarks>
            <since_tizen> 3 </since_tizen>
            <feature>
            http://tizen.org/feature/feedback.vibration
            </feature>
            <exception cref="T:System.Exception">Thrown when failed because the feedback is not initialized.</exception>
            <exception cref="T:System.ArgumentException">Thrown when failed because of an invalid arguament</exception>
            <exception cref="T:System.NotSupportedException">Thrown when failed because the device (haptic, sound) or a specific pattern is not supported.</exception>
            <exception cref="T:System.UnauthorizedAccessException">Thrown when failed because the access is not granted (No privilege).</exception>
            <exception cref="T:System.InvalidOperationException">Thrown when failed because of a system error.</exception>
            <privilege>http://tizen.org/privilege/haptic</privilege>
            <example>
            <code>
            Feedback Feedback1 = new Feedback();
            Feedback1.Stop();
            </code>
            </example>
        </member>
        <member name="T:Tizen.System.FeedbackPattern">
            <summary>
            String and enumeration for feedback patterns.
            </summary>
        </member>
        <member name="T:Tizen.System.FeedbackType">
            <summary>
            Enumeration for feedback device types.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.System.FeedbackType.All">
            <summary>
            Sound and vibration.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.System.FeedbackType.Sound">
            <summary>
            Sound feedback.
            </summary>
            <since_tizen> 3 </since_tizen>
        </member>
        <member name="F:Tizen.System.FeedbackType.Vibration">
            <summary>
            Vibration feedback.
            /// </summary>
            <since_tizen> 3 </since_tizen>
        </member>
    </members>
</doc>
